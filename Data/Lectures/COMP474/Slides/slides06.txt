René Witte Lecture 6 Introduction Modeling Users Recommender Systems Collaborative Filtering Introduction Personalization, Collaborative Filtering & Content-based recommendation Computing with Words Item Recommendation Items Related to other Items COMP 474/6741, Winter 2022 Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading René Witte Department of Computer Science and Software Engineering Concordia University 6.1 BreakPage Outline René Witte 1 Introduction Modeling Users Introduction Modeling Users 2 Collaborative Filtering Collaborative Filtering Introduction Introduction Computing with Words Computing with Words Item Recommendation Items Related to other Item Recommendation Items Items of Interest to a User Items Related to other Items Relevant Users for an Item Semantic User Proﬁles Items of Interest to a User Evaluation Relevant Users for an Item Content-based Recommendations Semantic User Proﬁles Motivation TF*IDF weighting Evaluation Term Vector Space Model Summary 3 Content-based Recommendations Notes and Further Reading Motivation TF*IDF weighting Term Vector Space Model Summary 4 Notes and Further Reading 6.2 BreakPage René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading Slides Credit Includes slides by Christopher D. Manning, Prabhakar Raghavan and Hinrich Schütze [MRS08] • Copyright © 2008 Cambridge University Press 6.3 BreakPage Recommender Systems and Collaborative Filtering René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading 6.4 BreakPage Collecting User Interactions René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading Copyright2009byManningPublicationsCo.,[Ala09] 6.5 BreakPage Item Metadata René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading Copyright2009byManningPublicationsCo.,[Ala09] 6.6 BreakPage Netﬂix Recommendations René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading https://www.youtube.com/watch?v=nq2QtatuF7U 6.7 BreakPage René Witte 1 Introduction Introduction Modeling Users 2 Collaborative Filtering Collaborative Filtering Introduction Introduction Computing with Words Computing with Words Item Recommendation Items Related to other Item Recommendation Items Items of Interest to a User Items Related to other Items Relevant Users for an Item Semantic User Proﬁles Items of Interest to a User Evaluation Relevant Users for an Item Content-based Recommendations Semantic User Proﬁles Motivation Evaluation TF*IDF weighting Term Vector Space Model Summary Notes and Further 3 Content-based Recommendations Reading 4 Notes and Further Reading 6.8 BreakPage Making Recommendations René Witte Given Information about a User. . . Introduction . . . we want to be able to have a system Modeling Users • recommending items (books, movies, music, photos, videos, etc.) Collaborative Filtering Introduction • ﬁnd users interested in a new item Computing with Words Item Recommendation • ﬁnd similar items, based on interests of other users IItteemmss Related to other Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading 6.9 BreakPage Collaborative Filtering René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading Copyright2016byManningPublicationsCo.,[TB16] 6.10 BreakPage Data Collection René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading Copyright2016byManningPublicationsCo.,[TB16] 6.11 BreakPage Fun with Flags Vectors René Witte Vectors Introduction A vector (cid:126)v is an element of a vector space. Modeling Users • For example, (cid:126)v ∈ Rn with Collaborative Filtering Introduction   x Computing with Words 1 Item Recommendation (cid:126)v = x..2 ∈ Rn IIIttteeemmmsss RofeIlnatteerdestot toothaeUr ser  .  Relevant Users for an Item Semantic User Proﬁles x n Evaluation Content-based Recommendations Motivation Visualization TF*IDF weighting We can visualize vectors, e.g., in 2D: Term Vector Space Model Summary Notes and Further Reading (cid:126)v 6.12 BreakPage So what? René Witte Vectors of words, users, products, . . . We can represent (users, documents, products) as vectors, e.g., using the count of Introduction tags or the weight of words. This is called a vector space model. Modeling Users Collaborative Filtering • Vector operations on entities, e.g., to compute their similarity Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading Copyright2008byCambridgeUniversityPress,[MRS08] 6.13 BreakPage Movies as Vectors René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading Copyright2016byManningPublicationsCo.,[TB16] 6.14 BreakPage Length normalization René Witte Introduction Modeling Users How do we compute the length of a vector? Collaborative Filtering Introduction • A vector can be (length-) normalized by dividing each of its components by its Computing with Words (cid:113) Item Recommendation length – here we use the L norm: ||x|| = (cid:80) x2 Items Related to other 2 2 i i Items Items of Interest to a User • This maps vectors onto the unit sphere . . . Relevant Users for an Item Semantic User Proﬁles (cid:113) • . . . since after normalization: ||x|| = (cid:80) x2 = 1.0 Evaluation 2 i i Content-based Recommendations • As a result, longer and shorter vectors (more/fewer tags) have weights of the Motivation TF*IDF weighting same order of magnitude. Term Vector Space Model Summary Notes and Further Reading → Worksheet #5: Tasks 1, 2 6.15 BreakPage How do we formalize vector space similarity? René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Computing the similarity Items Related to other Items • First cut: (negative) distance between two points Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles • ( = distance between the end points of the two vectors) Evaluation • Euclidean distance? Content-based Recommendations Motivation • Euclidean distance is a bad idea . . . TF*IDF weighting Term Vector Space Model • . . . because Euclidean distance is large for vectors of different lengths. Summary Notes and Further Reading 6.16 BreakPage Why Euclidian distance is a bad idea René Witte poor d : Rich poor gap grows 2 1 d1: Ranks of starving poets swell Introduction Modeling Users Collaborative Filtering Introduction Computing with Words q: [rich poor] Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model d : Record baseball salaries in 2010 Summary 3 Notes and Further 0 Reading rich 0 1 The Euclidean distance of (cid:126)q and (cid:126)d is large although the distribution of terms in the 2 query q and the distribution of terms in the document d are very similar. 2 6.17 BreakPage From angles to cosines René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Comparing vectors Items Related to other Items Items of Interest to a User • The following two notions are equivalent. Relevant Users for an Item Semantic User Proﬁles • Compare item vectors according to the angle between them, in decreasing order Evaluation • Rank item vectors according to cosine(item , item ) in increasing order Content-based 1 2 Recommendations • Cosine is a monotonically decreasing function of the angle for the interval Motivation TF*IDF weighting [0◦, 180◦] Term Vector Space Model Summary Notes and Further Reading 6.18 BreakPage Cosine René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading 6.19 BreakPage Cosine for normalized vectors René Witte Introduction Modeling Users Collaborative Filtering Computing similarity Introduction Computing with Words Item Recommendation • For normalized vectors, the cosine is equivalent to the dot product or scalar Items Related to other Items product. Items of Interest to a User • cos((cid:126)q, (cid:126)d) = (cid:126)q · (cid:126)d = (cid:80) q · d RSeemlevaanntitcUUsseerrsPfororﬁalnesItem i i i Evaluation • (if (cid:126)q and (cid:126)d are length-normalized). Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading → Worksheet #5: Task 3 6.20 BreakPage Item Recommendation René Witte Introduction Modeling Users Simple Tag-based Recommendation Collaborative Filtering Collaborative tagging gives rise to simple recommender approaches: Introduction Computing with Words • show other items (products, photos, videos, music) that were tagged similar by Item Recommendation Items Related to other other users Items Items of Interest to a User Relevant Users for an Item • exploited in many e-commerce/social networking web sites Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading 6.21 BreakPage Collaborative Filtering René Witte Finding related content When multiple users tag the same resource, content can be discovered based on the most frequent tags (example: Last.fm). Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading 6.22 BreakPage Recommendations René Witte Recommendations based on tags We can now exploit tags for a number of use cases: Introduction Modeling Users • Recommend items related to other items Collaborative Filtering • Recommend items based on user’s interest Introduction Computing with Words • Find users interested in a new item Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based General Approach Recommendations Motivation • Represent users/items as TF*IDF weighting Term Vector Space Model (normalized) term vectors Summary Notes and Further • Compute cosine similarity Reading between vectors; i.e., the angle between them (for normalized vectors, this is simply their dot product) Copyright2008byCambridgeUniversityPress,[MRS08] 6.23 BreakPage Items related to other items René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Simple point-to-point recommendation engine Items Items of Interest to a User • Create item vectors using raw count Relevant Users for an Item Semantic User Proﬁles Evaluation • Normalize vectors Content-based Recommendations • Compute cosine similarity Motivation TF*IDF weighting Result is a similarity matrix Term Vector Space Model Summary Notes and Further Reading 6.24 BreakPage Items of interest to a user René Witte Introduction Modeling Users Personalization Collaborative Filtering Introduction • Item-to-item is the same for all users Computing with Words Item Recommendation • How can we recommend items for a particular user? IItteemmss Related to other Items of Interest to a User Solution: build user-speciﬁc similarity matrix Relevant Users for an Item Semantic User Proﬁles • computation of vectors, normalization as before Evaluation Content-based • this time, we calculate the cosine similarity between a user vector and Recommendations Motivation article vector TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading → Worksheet #5: Tasks 4, 5 6.25 BreakPage Finding relevant users for an item René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Recommending items to users Items Items of Interest to a User Relevant Users for an Item • New item comes in (blog post, photo, article, product, . . .) Semantic User Proﬁles Evaluation • Which users would be interested in it? Content-based Recommendations Similar to before, compute similarity matrix between metadata of new item and Motivation TF*IDF weighting metadata of users. Term Vector Space Model Summary Notes and Further Reading 6.26 BreakPage Cold-Start Problem René Witte Introduction Modeling Users Collaborative Filtering Introduction General issue in recommender system deployment Computing with Words Item Recommendation Items Related to other • New user ⇒ no user proﬁle for recommendations Items Items of Interest to a User • New item ⇒ no user interactions for this item Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based No general solution. . . Recommendations Motivation Some strategies: TF*IDF weighting Term Vector Space Model • Ask user for preferences during sign-up Summary Notes and Further • Recommend top-n items (e.g., currently most popular movies/songs/products) Reading 6.27 BreakPage Semantic Vocabularies for User Modeling René Witte Introduction Modeling Users Collaborative Filtering Introduction Semantic User Proﬁles Computing with Words Item Recommendation Idea: Use vocabularies instead of keywords in the vector representation of a user Items Related to other Items proﬁle Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Motivation Evaluation Content-based • Semantic recommendations (remember the “tree” example) Recommendations Motivation • Open knowledge bases: TF*IDF weighting Term Vector Space Model • interoperable between applications Summary • controlled by users, not corporations Notes and Further Reading 6.28 BreakPage Vocabularies René Witte Introduction Modeling Users Generic user modeling vocabularies Collaborative Filtering Introduction FOAF Computing with Words Item Recommendation • The most popular generic user model offering descriptions for basic user Items Related to other Items information Items of Interest to a User Relevant Users for an Item • No comprehensive classes for describing preferences or interests Semantic User Proﬁles Evaluation GUMO Content-based Recommendations • A generic user model that offers several classes for users’ characteristics Motivation TF*IDF weighting • Basic user dimensions like Emotional States, Characteristics and Personality Term Vector Space Model Summary IntelLEO Notes and Further Reading • Several ontologies strongly focused on personalization • Enables describing user and team modelling, preferences, tasks and interests 6.29 BreakPage The $1m Netﬂix Prize Competition (2009) René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading 6.30 BreakPage General machine learning process René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading 6.31 BreakPage Performance Evaluation René Witte Measuring performance Introduction • Is our fancy model better than giving out random recommendations? Modeling Users Collaborative Filtering • We need metrics to evaluate and compare the performance of different Introduction approaches against a ground truth (a.k.a. gold standard) Computing with Words Item Recommendation Items Related to other Items Items of Interest to a User Precision and Recall Relevant Users for an Item The precision provides a measure of the quality of the generated recommendations: Semantic User Proﬁles Evaluation Content-based #correct system recommendations Recommendations precision = Motivation #all system recommendations TF*IDF weighting Term Vector Space Model Summary The recall indicates how many relevant recommendations were found by a system: Notes and Further Reading #correct system recommendations recall = #all correct recommendations Generally, there is a trade-off between precision and recall. → Worksheet #5: Task 6 6.32 BreakPage Precision@k René Witte Precision at cutoff k Introduction Modeling Users • Return a ranked list of recommendations (e.g., based on cosine similarity) Collaborative Filtering • Evaluate only top-k recommendations (e.g., top-10) Introduction Computing with Words Item Recommendation 1 (cid:88)k IItteemmss Related to other precision@k = · rel(c), Items of Interest to a User k Relevant Users for an Item c=1 Semantic User Proﬁles Evaluation where rel(c) tells us if item at rank c was relevant (1) or not (0). Content-based Recommendations Intuitively. . . Motivation TF*IDF weighting The percentage of correct recommendations in the top-k . Term Vector Space Model Summary Notes and Further Wait, what happened to Recall? Reading Well. . . in this application scenario, we don’t really care (there are millions of potentially relevant items on Amazon or movies on Netﬂix) → Worksheet #5: Task 7 6.33 BreakPage Average Precision René Witte Introduction Modeling Users Average Precision at N Collaborative Filtering If we recommend N items to a user, where there are at most m relevant items in Introduction Computing with Words 1 . . . N, Item Recommendation Items Related to other 1 (cid:88)N Items AP@N = precision@k ·rel(k ) Items of Interest to a User m Relevant Users for an Item k=1 Semantic User Proﬁles Evaluation again, rel(c) is 1 if the recommendation at rank c is relevant, 0 otherwise Content-based Recommendations Motivation Note TF*IDF weighting Term Vector Space Model AP “rewards” (gives a higher score to) higher-ranked, correct recommendations Summary Notes and Further Reading → Worksheet #5: Task 8 6.34 BreakPage Mean Average Precision (MAP) René Witte MAP Introduction • So far, everything was calculated for one user u ∈ U Modeling Users Collaborative Filtering • But we want to know how well the system works across all users Introduction Computing with Words • Hence, average the AP for all users: Item Recommendation Items Related to other |U| Items 1 (cid:88) Items of Interest to a User MAP@N = AP@N(u) Relevant Users for an Item |U| Semantic User Proﬁles u=1 Evaluation Content-based Recommendations But wait, there’s more. . . Motivation TF*IDF weighting Term Vector Space Model • Accuracy, Sensitivity, F-measure, . . . Summary Notes and Further • Non-binary ranked results (i.e., not just correct or wrong, but a Likert-scale): Reading Compute the discounted cumulative gain (DCG), |C| DCG = rel + (cid:88) relc u 1 log c c=2 2 6.35 BreakPage René Witte 1 Introduction Introduction Modeling Users Collaborative Filtering Introduction 2 Collaborative Filtering Computing with Words Item Recommendation Items Related to other Items 3 Content-based Recommendations Items of Interest to a User Relevant Users for an Item Motivation Semantic User Proﬁles TF*IDF weighting Evaluation Content-based Term Vector Space Model Recommendations Summary Motivation TF*IDF weighting Term Vector Space Model Summary 4 Notes and Further Reading Notes and Further Reading 6.36 BreakPage Content-based Recommendations René Witte Introduction Motivation Modeling Users Collaborative Filtering • So far, we build our model using vectors of concepts (e.g., tags, movie Introduction categories, etc.) Computing with Words Item Recommendation • What if we want to create recommendations based on the content IItteemmss Related to other Items of Interest to a User • Movie description/summary Relevant Users for an Item • Blog post Semantic User Proﬁles Evaluation • News article Content-based • Research publication Recommendations Motivation • . . . TF*IDF weighting Term Vector Space Model Summary Approach Notes and Further Reading Same idea, but now we have to build vectors out of whole documents • Basic idea of information retrieval (IR) • Used in Internet search engines 6.37 BreakPage Binary incidence matrix René Witte Anthony Julius The Hamlet Othello Macbeth . . . and Caesar Tempest Introduction Cleopatra Modeling Users ANTHONY 1 1 0 0 0 1 Collaborative Filtering Introduction BRUTUS 1 1 0 1 0 0 Computing with Words CAESAR 1 1 0 1 1 1 Item Recommendation Items Related to other CALPURNIA 0 1 0 0 0 0 Items CLEOPATRA 1 0 0 0 0 0 Items of Interest to a User Relevant Users for an Item MERCY 1 0 1 1 1 1 Semantic User Proﬁles WORSER 1 0 1 1 1 0 Evaluation . . . Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Each document is represented as a binary vector ∈ {0, 1}|V|. Summary [from Introduction to Information Retrieval] Notes and Further Reading 6.38 BreakPage Count matrix René Witte Anthony Julius The Hamlet Othello Macbeth . . . and Caesar Tempest Introduction Cleopatra Modeling Users ANTHONY 157 73 0 0 0 1 Collaborative Filtering Introduction BRUTUS 4 157 0 2 0 0 Computing with Words CAESAR 232 227 0 2 1 0 Item Recommendation Items Related to other CALPURNIA 0 10 0 0 0 0 Items CLEOPATRA 57 0 0 0 0 0 Items of Interest to a User Relevant Users for an Item MERCY 2 0 3 8 5 8 Semantic User Proﬁles WORSER 2 0 1 1 1 5 Evaluation . . . Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Each document is now represented as a count vector ∈ N|V|. Summary Notes and Further Reading 6.39 BreakPage Bag of words model René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Item Recommendation Items Related to other Items • We do not consider the order of words in a document. Items of Interest to a User Relevant Users for an Item • John is quicker than Mary and Mary is quicker than John are represented the Semantic User Proﬁles Evaluation same way. Content-based Recommendations • This is called a bag of words model. Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading 6.40 BreakPage tf-idf René Witte Introduction Modeling Users Term frequency tf Collaborative Filtering Introduction The term frequency tft,d of term t in document d is deﬁned as the number of times Computing with Words Item Recommendation that t occurs in d. Items Related to other Items Items of Interest to a User Frequency in document vs. frequency in collection Relevant Users for an Item Semantic User Proﬁles Evaluation • In addition, to term frequency (the frequency of the term in the document) . . . Content-based • . . . we also want to use the frequency of the term in the collection for weighting Recommendations Motivation and ranking. TF*IDF weighting Term Vector Space Model • Rare terms are more informative than frequent terms. Summary Notes and Further • Consider a term in the query that is rare in the collection (e.g., ARACHNOCENTRIC). Reading • A document containing this term is very likely to be relevant. • → We want high weights for rare terms like ARACHNOCENTRIC. 6.41 BreakPage Desired weight for frequent terms René Witte Introduction Modeling Users Weighting scheme Collaborative Filtering Introduction • Frequent terms are less informative than rare terms. Computing with Words Item Recommendation Items Related to other • Consider a term in the query that is frequent in the collection (e.g., GOOD, Items Items of Interest to a User INCREASE, LINE). Relevant Users for an Item Semantic User Proﬁles • A document containing this term is more likely to be relevant than a document Evaluation that doesn’t . . . Content-based Recommendations • . . . but words like GOOD, INCREASE and LINE are not sure indicators of Motivation TF*IDF weighting relevance. Term Vector Space Model Summary • → For frequent terms like GOOD, INCREASE, and LINE, we want positive Notes and Further Reading weights . . . • . . . but lower weights than for rare terms. 6.42 BreakPage Document Frequency René Witte Introduction Modeling Users Collaborative Filtering Introduction Document Frequency (df) Computing with Words Item Recommendation Items Related to other • We want high weights for rare terms like ARACHNOCENTRIC. Items Items of Interest to a User • We want low (positive) weights for frequent words like GOOD, INCREASE, and RSeemlevaanntitcUUsseerrsPfororﬁalnesItem LINE. Evaluation Content-based • We will use document frequency to factor this into computing the matching Recommendations Motivation score. TF*IDF weighting Term Vector Space Model • The document frequency is the number of documents in the collection that the Summary term occurs in. Notes and Further Reading 6.43 BreakPage idf weight René Witte Introduction inverse document frequency (idf) Modeling Users Collaborative Filtering • df is the document frequency, the number of documents that t occurs in. Introduction t Computing with Words Item Recommendation • dft is an inverse measure of the informativeness of term t. Items Related to other Items • We deﬁne the idf weight of term t as follows: Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles N Evaluation idf = log t 10 dft CRoencotemnmt-beansdeadtions Motivation (N is the number of documents in the collection.) TF*IDF weighting Term Vector Space Model Summary • idf is a measure of the informativeness of the term. t Notes and Further Reading • [log N/df ] instead of [N/df ] to “dampen” the effect of idf t t • Note that we use the log transformation for both term frequency and document frequency. 6.44 BreakPage Examples for idf René Witte Compute idf using the formula: idf = log 1,000,000 t t 10 df Introduction t Modeling Users Collaborative Filtering term df idf t t Introduction calpurnia 1 6 Computing with Words Item Recommendation animal 100 4 Items Related to other Items sunday 1000 3 Items of Interest to a User Relevant Users for an Item ﬂy 10,000 2 Semantic User Proﬁles under 100,000 1 Evaluation Content-based the 1,000,000 0 Recommendations Motivation TF*IDF weighting Term Vector Space Model Effect of idf on ranking Summary Notes and Further • idf affects the ranking of documents for queries with at least two terms. Reading • For example, in the query “arachnocentric line”, idf weighting increases the relative weight of ARACHNOCENTRIC and decreases the relative weight of LINE. • idf has little effect on ranking for one-term queries. 6.45 BreakPage tf-idf weighting René Witte Introduction Modeling Users Collaborative Filtering Computing tf-idf Introduction Computing with Words Item Recommendation • The tf-idf weight of a term is the product of its tf weight and its idf weight: Items Related to other Items Items of Interest to a User N Relevant Users for an Item w = (1 + log tf ) · log Semantic User Proﬁles t,d t,d df Evaluation t Content-based Recommendations • Set to 0 if tft,d = 0 Motivation TF*IDF weighting • Best known weighting scheme in information retrieval Term Vector Space Model Summary • Note: the “-” in tf-idf is a hyphen, not a minus sign! Notes and Further Reading • Alternative names: tf.idf, tf x idf 6.46 BreakPage Summary: tf-idf René Witte Computation Introduction Modeling Users Assign a tf-idf weight for each term t in each document d: Collaborative Filtering Introduction (cid:40)(1 + log tf ) · log N , if tf > 0 Computing with Words wt,d = t,d dft t,d IItteemmsRReecolamtemdetondoathtioenr 0, otherwise Items Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation Effect Content-based Recommendations The tf-idf weight . . . Motivation TF*IDF weighting • . . . increases with the number of occurrences within a document Term Vector Space Model (due to the term frequency) Summary Notes and Further • . . . increases with the rarity of the term in the collection Reading (due to the inverse document frequency) → Worksheet #5: Task 9 6.47 BreakPage Binary incidence matrix René Witte Anthony Julius The Hamlet Othello Macbeth . . . and Caesar Tempest Introduction Cleopatra Modeling Users ANTHONY 1 1 0 0 0 1 Collaborative Filtering Introduction BRUTUS 1 1 0 1 0 0 Computing with Words CAESAR 1 1 0 1 1 1 Item Recommendation Items Related to other CALPURNIA 0 1 0 0 0 0 Items CLEOPATRA 1 0 0 0 0 0 Items of Interest to a User Relevant Users for an Item MERCY 1 0 1 1 1 1 Semantic User Proﬁles WORSER 1 0 1 1 1 0 Evaluation . . . Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Each document is represented as a binary vector ∈ {0, 1}|V|. Summary [from Introduction to Information Retrieval] Notes and Further Reading 6.48 BreakPage Count matrix René Witte Anthony Julius The Hamlet Othello Macbeth . . . and Caesar Tempest Introduction Cleopatra Modeling Users ANTHONY 157 73 0 0 0 1 Collaborative Filtering Introduction BRUTUS 4 157 0 2 0 0 Computing with Words CAESAR 232 227 0 2 1 0 Item Recommendation Items Related to other CALPURNIA 0 10 0 0 0 0 Items CLEOPATRA 57 0 0 0 0 0 Items of Interest to a User Relevant Users for an Item MERCY 2 0 3 8 5 8 Semantic User Proﬁles WORSER 2 0 1 1 1 5 Evaluation . . . Content-based Recommendations Motivation TF*IDF weighting Term Vector Space Model Each document is now represented as a count vector ∈ N|V|. Summary Notes and Further Reading 6.49 BreakPage Binary → count → weight matrix René Witte Anthony Julius The Hamlet Othello Macbeth . . . and Caesar Tempest Cleopatra Introduction ANTHONY 5.25 3.18 0.0 0.0 0.0 0.35 Modeling Users BRUTUS 1.21 6.10 0.0 1.0 0.0 0.0 Collaborative Filtering Introduction CAESAR 8.59 2.54 0.0 1.51 0.25 0.0 Computing with Words CALPURNIA 0.0 1.54 0.0 0.0 0.0 0.0 Item Recommendation Items Related to other CLEOPATRA 2.85 0.0 0.0 0.0 0.0 0.0 Items MERCY 1.51 0.0 1.90 0.12 5.25 0.88 Items of Interest to a User Relevant Users for an Item WORSER 1.37 0.0 0.11 4.15 0.25 1.95 Semantic User Proﬁles . . . Evaluation Content-based Recommendations Motivation Each document is now represented as a real-valued vector of tf-idf weights ∈ R|V|. TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading 6.50 BreakPage Vector Space Model René Witte Introduction Modeling Users Collaborative Filtering Documents as vectors Introduction Computing with Words Item Recommendation • Each document is now represented as a real-valued vector of tf-idf weights Items Related to other ∈ R|V|. IItteemmss of Interest to a User Relevant Users for an Item • So we have a |V |-dimensional real-valued vector space. Semantic User Proﬁles Evaluation • Terms are axes of the space. Content-based Recommendations • Documents are points or vectors in this space. Motivation TF*IDF weighting • Very high-dimensional: tens of millions of dimensions when you apply this to Term Vector Space Model Summary web search engines Notes and Further Reading • Each vector is very sparse – most entries are zero. 6.51 BreakPage Queries as vectors René Witte Introduction Modeling Users Collaborative Filtering Introduction • Key idea 1: do the same for queries: represent them as vectors in the Computing with Words Item Recommendation high-dimensional space Items Related to other Items Items of Interest to a User • Key idea 2: Rank documents according to their proximity to the query Relevant Users for an Item Semantic User Proﬁles • proximity = similarity Evaluation • proximity ≈ negative distance CRoencotemnmt-beansdeadtions Motivation • Recall: We’re doing this because we want to get away from the TF*IDF weighting you’re-either-in-or-out, feast-or-famine Boolean model. Term Vector Space Model Summary • Instead: rank relevant documents higher than nonrelevant documents Notes and Further Reading 6.52 BreakPage Cosine similarity between query and document René Witte Introduction Modeling Users Collaborative Filtering Introduction cos((cid:126)q, (cid:126)d) = SIM((cid:126)q, (cid:126)d) = |(cid:126)q(cid:126)q|·|(cid:126)d(cid:126)d| = (cid:113)(cid:80)|V(cid:80)| q|i=V21|(cid:113)qi(cid:80)di|V| d2 CIIIItttteeeeommmmmssspRuRoetfeicnIolnagmtteewmrdietehstontWdtooaothtarioedUnrsser i=1 i i=1 i Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based • q is the tf-idf weight of term i in the query. Recommendations i Motivation • d is the tf-idf weight of term i in the document. TF*IDF weighting i Term Vector Space Model • |(cid:126)q| and |(cid:126)d| are the lengths of (cid:126)q and (cid:126)d. Summary Notes and Further Reading • This is the cosine similarity of (cid:126)q and (cid:126)d . . . . . . or, equivalently, the cosine of the angle between (cid:126)q and (cid:126)d. 6.53 BreakPage Cosine similarity illustrated René Witte poor 1 ~v(d ) Introduction 1 Modeling Users Collaborative Filtering Introduction Computing with Words ~v(q) Item Recommendation Items Related to other Items ~v(d ) Items of Interest to a User 2 Relevant Users for an Item Semantic User Proﬁles Evaluation Content-based Recommendations θ Motivation TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading ~v(d ) 3 0 rich 0 1 . 6.54 BreakPage Basic Recommender Engine using Vector Space Model René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Approach Item Recommendation Items Related to other Items • Represent all documents (movie descriptions, blog posts, research Items of Interest to a User Relevant Users for an Item articles, . . . ) as a weighted tf-idf vector Semantic User Proﬁles Evaluation • Compute the cosine similarity between the target vector and each document Content-based vector Recommendations Motivation • Rank documents with respect to the target TF*IDF weighting Term Vector Space Model • Return the top k (e.g., k = 10) to the user Summary Notes and Further Reading 6.55 BreakPage Summary René Witte Vector Space Model • A mathematical model to portray an n-dimensional space Introduction Modeling Users • Entities are described by vectors with n coordinates in a real space Rn Collaborative Filtering Introduction • Given two vectors, we can compute a similarity coefﬁcient between them Computing with Words Item Recommendation • Cosine of the angle between two vectors reﬂects their degree of similarity IItteemmss Related to other Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation tf = 1 + log(tft,d) (1) Content-based Recommendations Motivation N TF*IDF weighting idf = log (2) dft TSeurmmmVaercytor Space Model cos((cid:126)q , (cid:126)d ) = (cid:113) (cid:80)|i=v|1 q(cid:113)i · di (3) NRoetaedsinagnd Further (cid:80)|i=v|1 qi2 · (cid:80)i|=v|1 di2 6.56 BreakPage  BreakPage Outline René Witte Introduction Modeling Users Collaborative Filtering 1 Introduction Introduction Computing with Words Item Recommendation Items Related to other Items 2 Collaborative Filtering Items of Interest to a User Relevant Users for an Item Semantic User Proﬁles Evaluation 3 Content-based Recommendations Content-based Recommendations Motivation 4 Notes and Further Reading TF*IDF weighting Term Vector Space Model Summary Notes and Further Reading 6.58 BreakPage Reading Material René Witte Introduction Modeling Users Collaborative Filtering Introduction Computing with Words Required Item Recommendation Items Related to other Items • [Ala09, Chapters 2, 3] (Recommendations) Items of Interest to a User Relevant Users for an Item • [MRS08, Chapter 8] (Evaluation) Semantic User Proﬁles Evaluation Content-based Recommendations Supplemental Motivation TF*IDF weighting Term Vector Space Model • [MRS08, Chapter 6] (Vector Space Model, tf-idf) Summary Notes and Further Reading 6.59 BreakPage References René Witte Introduction Modeling Users [Ala09] Satnam Alag. Collaborative Filtering Introduction Collective Intelligence in Action. Computing with Words Manning, 2009. Item Recommendation Items Related to other https://concordiauniversity.on.worldcat.org/oclc/314121652. Items Items of Interest to a User Relevant Users for an Item [MRS08] Christopher D. Manning, Prabhakar Raghavan, and Hinrich Schütze. Semantic User Proﬁles Evaluation Introduction to Information Retrieval. Content-based Cambridge University Press, 2008. Recommendations Motivation http://informationretrieval.org. TF*IDF weighting Term Vector Space Model Summary [TB16] Doug Turnbull and John Berryman. Notes and Further Relevant Search. Reading Manning, 2016. https://concordiauniversity.on.worldcat.org/oclc/954339855. 6.60 BreakPage 