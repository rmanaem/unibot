

























































COMP6721 Applied Artificial Intelligence (Winter 2022)

Lab Exercise #3: MiniMax and Alpha-Beta Pruning

Question 1 (a) Consider the game tree shown below. Explore the tree using Alpha-Beta.
Indicate all parts of the tree that are pruned, and indicate the winning
path or paths.

(b) Now do the same for the tree below, which is a mirror image of the tree
shown above.

(c) Compare the amount of pruning in the above two trees. What do you
notice about how the order of evaluation nodes affects the amount of
Alpha-Beta pruning?

1



Question 2 Consider the game tree below. Each node is labelled with a letter, and the
evaluation function for each leaf is indicated in parentheses. Assume that the
MAX player goes first.

(a) Compute the minimax game value of nodes A, B, C, and D using the
minimax algorithm. Show all values that are brought up to the internal
nodes. What should MAX do?

(b) Cross out the branches of all the nodes that are not visited by alpha-beta
pruning. Show all your work.

(c) Draw a new game tree by re-ordering the children of each internal nodes
(B to M), such that the new game tree is equivalent to the tree above,
but alpha-beta pruning will prune as many nodes as possible.

2



Question 3 Now consider the following game tree.

The value of the evaluation function at each node is shown next to its name.
For example, B-4 indicates that node B has an evaluation function of 4. All
evaluations are from the point of view of the first player.

(a) Assume that the first player is the maximizing player MAX and she looks
at all levels (ie, to the level labeled L, M, N, O, . . . ). List in order the
states that will NOT be examined when using alpha-beta pruning.

(b) What move should MAX choose?
(c) Suppose that instead of looking down all levels, MAX can only afford to

look at level 2 (ie, the level with E, F, G, H, . . . instead of the level with
L, M, N, O. . . ). In theory, could that change MAX’s move? Explain.

3



Question 4 Consider state space search for the game of Tic-Tac-Toe. You are the X
player, looking at the board shown below, with five possible moves. You want
to look ahead to find your best move and decide to use the following evaluation
function for rating board configurations:
value V = 0
for all rows, columns, diagonals R do:

if R contains three Xs then:
V = V + 1000

else if R contains three 0s then:
V = V − 1000

else if R contains two Xs then:
V = V + 100

else if R contains two Os then:
V = V − 100

else if R contains one X then:
V = V + 10

else if R contains one O then:
V = V − 10

end if
end for
return V

(a) Draw the four possible configurations for the leftmost and the rightmost
board configurations below. Use the evaluation function above to rate
these 8 board configurations and choose X’s best move.

4


