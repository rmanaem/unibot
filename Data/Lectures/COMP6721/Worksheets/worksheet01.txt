COMP 6721 Applied Artiﬁcial Intelligence (Winter 2022) Worksheet #1: Solving Problems by Searching Breadth-First Search. Let’s apply the BFS algorithm discussed in the lecture on an example: Assume U is the goal state. Note that open is a queue: 1. open = [A ], closed = [ ] null 2. open = [B C D ], closed = [A] A A A 3. open = [C D E F ], closed = [B A] A A B B 4. open = [ ], closed = [ ] 5. open = [ ], closed = [ ] 6. open = [ ], closed = [ ] 7. open = [ ], closed = [ ] Depth-First Search. Now we do the same for the DFS algorithm: Again, assume U is the goal state. Note that open is a stack: 1. open = [A ], closed = [ ] null 2. open = [B C D ], closed = [A] A A A 3. open = [E F C D ], closed = [B A] B B A A 4. open = [K L F C D ], closed = [E B A] E E B A A 5. open = [S L F C D ], closed = [K E B A] K E B A A 6. open = [ ], closed = [ ] 7. open = [ ], closed = [ ] 8. open = [ ], closed = [ ] 9. open = [ ], closed = [ ] 10. open = [ ], closed = [ ] BreakPage COMP 6721 Worksheet: Solving Problems by Searching Winter 2022 Best-First Search. Next, we try a best-ﬁrst (greedy) search. We have a heuristic h(n) that estimates the cost for each path. The goal is P. At each step, expand the node with the lowest cost (as predicted by the heuristic): 1. open = [A5 ], closed = [ ] null 2. open = [B 4 C 4 D6 ] (random choice), closed = [A] A A A 3. open = [C 4 E 5 F 5 D6 ], closed = [B A] A B B A 4. open = [ ], closed = [ ] 5. open = [ ], closed = [ ] 6. ??? Finally, extract the path to the solution from the search result: Algorithm A. Compute the next step of the Algorithm A on the 8-puzzle: 1. Pick the state with the lowest total cost f (n) 2. and compute the next possible search states, including the new values of f (n), g(n) and h(n). BreakPage 